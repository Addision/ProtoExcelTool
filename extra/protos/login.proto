syntax = "proto3";



enum LoginMsgId {
    Login_MSG_ID = 0;    
    LOGIN_LOGIN_ACK = 1104;
    LOGIN_CREATEACCOUNT_REQ = 1101;
    LOGIN_CREATEROLE_REQ = 1105;
    LOGIN_CREATEROLE_ACK = 1106;
    LOGIN_CREATEACCOUNT_ACK = 1102;
    LOGIN_SELECTROLE_REQ = 1107;
    LOGIN_SELECTROLE_ACK = 1108;
    LOGIN_DELETEROLE_REQ = 1109;
    LOGIN_DELETEROLE_ACK = 1110;
    LOGIN_LOGIN_REQ = 1103;

}
// 服务器返回请求登录信息
message LoginAck{
   int32 ErrCode = 1; // 返回码
   repeated RoleInfo RoleList = 2; // 角色列表
}

// 客户端请求创建账号
message CreateAccountReq{
   string Account = 1; //账号
   string Password = 2; // md5之后的密码-前端要做一个简单验证
}

// 创建角色请求
message CreateRoleReq{
   int64 UserId = 1;
   int32 RoleId = 2; // 选择创建角色id
   string RoleName = 3; // 创建角色名字
}

// 创建角色返回
message CreateRoleAck{
   int32 ErrCode = 1; // 如果成功
   
}

// 创建账号返回
message CreateAccountAck{
   string Token=1; // 以后会作为唯一一个登录凭证
}

// 角色选择请求
message SelectRoleReq{
   int64 UserId = 1; // 选择某个角色进入游戏
}

// 选择角色返回
message SelectRoleAck{
   int32 ErrCode = 1; // 只有一个错误返回
}

// 删除角色
message DeleteRoleReq{
   int64 UserId = 1; // 删除角色id
}

// 删除角色返回
message DeleteRoleAck{
   int32 ErrCode = 1;
}

// 角色信息
message RoleInfo{
   int32 UserId = 1; // 角色唯一id，服务器端生成的
   int32 RoleImageId = 2; // 角色形象id 一般就是1、2、3、4四种角色
   string RoleName = 3; // 角色名字
   int32 RoleLevel = 4; // 角色等级
   
}

// 客户端请求登录到游戏中
message LoginReq{
   string Token = 1; // 登录验证token
   int64 AccountId=2;
   
}

